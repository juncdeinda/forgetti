// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`forgetti skip > should optimize non-skipped function declaration 1`] = `
"import { useMemo as _useMemo } from \\"react\\";
import { $$cache as _$$cache } from \\"forgetti/runtime\\";
import { $$equals as _$$equals } from \\"forgetti/runtime\\";
import { memo as _memo } from \\"react\\";
import { $$memo as _$$memo } from \\"forgetti/runtime\\";
const _Example = _$$memo(_memo, \\"_Example\\", _values => <h1 className={_values[0]}>{_values[1]}</h1>);
function Example(props) {
  let _cache = _$$cache(_useMemo, 8),
    _equals = _$$equals(_cache, 0, props),
    _value = _equals ? _cache[0] : _cache[0] = props,
    _value2 = _equals ? _cache[1] : _cache[1] = _value.className,
    _equals2 = _$$equals(_cache, 2, _value2),
    _value3 = _equals2 ? _cache[2] : _cache[2] = _value2,
    _value4 = _equals ? _cache[3] : _cache[3] = _value.children,
    _equals3 = _$$equals(_cache, 4, _value4),
    _value5 = _equals3 ? _cache[4] : _cache[4] = _value4,
    _value6 = _equals2 && _equals3 ? _cache[5] : _cache[5] = [_value3, _value5],
    _equals5 = _$$equals(_cache, 6, _value6),
    _value7 = _equals5 ? _cache[6] : _cache[6] = _value6;
  return /*@forgetti jsx*/_equals5 ? _cache[7] : _cache[7] = <_Example v={_value7} />;
}"
`;

exports[`forgetti skip > should optimize non-skipped function expression 1`] = `
"import { useMemo as _useMemo } from \\"react\\";
import { $$cache as _$$cache } from \\"forgetti/runtime\\";
import { $$equals as _$$equals } from \\"forgetti/runtime\\";
import { memo as _memo } from \\"react\\";
import { $$memo as _$$memo } from \\"forgetti/runtime\\";
const _Example = _$$memo(_memo, \\"_Example\\", _values => <h1 className={_values[0]}>{_values[1]}</h1>);
const Example = function (props) {
  let _cache = _$$cache(_useMemo, 8),
    _equals = _$$equals(_cache, 0, props),
    _value = _equals ? _cache[0] : _cache[0] = props,
    _value2 = _equals ? _cache[1] : _cache[1] = _value.className,
    _equals2 = _$$equals(_cache, 2, _value2),
    _value3 = _equals2 ? _cache[2] : _cache[2] = _value2,
    _value4 = _equals ? _cache[3] : _cache[3] = _value.children,
    _equals3 = _$$equals(_cache, 4, _value4),
    _value5 = _equals3 ? _cache[4] : _cache[4] = _value4,
    _value6 = _equals2 && _equals3 ? _cache[5] : _cache[5] = [_value3, _value5],
    _equals5 = _$$equals(_cache, 6, _value6),
    _value7 = _equals5 ? _cache[6] : _cache[6] = _value6;
  return /*@forgetti jsx*/_equals5 ? _cache[7] : _cache[7] = <_Example v={_value7} />;
};"
`;

exports[`forgetti skip > should optimize non-skipped variable declaration 1`] = `
"import { useMemo as _useMemo } from \\"react\\";
import { $$cache as _$$cache } from \\"forgetti/runtime\\";
import { $$equals as _$$equals } from \\"forgetti/runtime\\";
import { memo as _memo } from \\"react\\";
import { $$memo as _$$memo } from \\"forgetti/runtime\\";
const _Example = _$$memo(_memo, \\"_Example\\", _values => <h1 className={_values[0]}>{_values[1]}</h1>);
const Example = props => {
  let _cache = _$$cache(_useMemo, 8),
    _equals = _$$equals(_cache, 0, props),
    _value = _equals ? _cache[0] : _cache[0] = props,
    _value2 = _equals ? _cache[1] : _cache[1] = _value.className,
    _equals2 = _$$equals(_cache, 2, _value2),
    _value3 = _equals2 ? _cache[2] : _cache[2] = _value2,
    _value4 = _equals ? _cache[3] : _cache[3] = _value.children,
    _equals3 = _$$equals(_cache, 4, _value4),
    _value5 = _equals3 ? _cache[4] : _cache[4] = _value4,
    _value6 = _equals2 && _equals3 ? _cache[5] : _cache[5] = [_value3, _value5],
    _equals5 = _$$equals(_cache, 6, _value6),
    _value7 = _equals5 ? _cache[6] : _cache[6] = _value6;
  return /*@forgetti jsx*/_equals5 ? _cache[7] : _cache[7] = <_Example v={_value7} />;
};"
`;

exports[`forgetti skip > should skip skipped function declaration 1`] = `
"/* @forgetti skip */
function Example(props) {
  return <h1 className={props.className}>{props.children}</h1>;
}"
`;

exports[`forgetti skip > should skip skipped function expression 1`] = `
"const /* @forgetti skip */ExampleA = function (props) {
  return <h1 className={props.className}>{props.children}</h1>;
};
/* @forgetti skip */
const ExampleB = function (props) {
  return <h1 className={props.className}>{props.children}</h1>;
};"
`;

exports[`forgetti skip > should skip skipped variable declaration 1`] = `
"const /* @forgetti skip */ExampleA = props => {
  return <h1 className={props.className}>{props.children}</h1>;
};
/* @forgetti skip */
const ExampleB = props => {
  return <h1 className={props.className}>{props.children}</h1>;
};"
`;
